{
  "hero": "벽에 막히면 벽을 오릅니다.",
  "heroDesc01": "디버깅에 지치면 손가락 대신 발가락을 씁니다. (암벽에서요)",
  "heroDesc02": "끈기와 탐색으로 더 나은 사용자 경험을 만드는 개발자 심민섭입니다.",
  "about": "소개",
  "career": "주요 프로젝트",
  "skills": "기술 스택",
  "contact": "Contact",
  "typeText": "안녕하세요!\n저는 프론트엔드 개발자 심민섭입니다.\n저는 미국에서 고등학교, 대학교를 졸업했고 현재는 서울에서 거주 중입니다.\n저는 주로 React-TypeScript, React Native 기반의 웹 또는 앱 개발 프로젝트를 진행하였습니다. \n1년간 약 10개의 프로젝트를 진행하여 다양한 기술 스택과 서드파티 라이브러리를 사용했기 때문에 Agile 패턴의 실무 작업에 매우 익숙합니다.",
  "html5": "웹 접근성과 시맨틱 마크업의 중요성을 인지하고 있으며, 실제 프로젝트에서 시맨틱 태그와 alt 속성 등을 활용해 사용자 경험과 접근성을 고려한 구조로 마크업을 구성한 경험이 있습니다.",
  "css3": "미디어 쿼리를 활용한 반응형(mobile-first) 디자인과 CSS 애니메이션을 통해 사용자 인터랙션을 자연스럽게 표현할 수 있으며, 별도의 프레임워크 없이도 확장성 있는 스타일링이 가능합니다.",
  "javascript": "바닐라 JavaScript만으로 포트폴리오 웹사이트를 구축한 경험이 있으며, ES6 문법을 적극적으로 활용하고 DOM 조작, 이벤트 처리, Flexbox 등 웹 개발의 핵심 개념을 깊이 있게 이해하고 있습니다.",
  "react": "React의 핵심 렌더링 구조와 Fiber Architecture의 도입 배경 및 작동 원리에 대해 이해하고 있으며, 컴포넌트 기반 아키텍처의 진화 과정을 설명할 수 있습니다. Suspense, Error Boundary, Context API 등의 기능을 통해 사용자 경험을 향상시키는 UI 구성 경험이 있으며, useReducer와 useContext를 상황에 따라 적절히 구분해 코드의 가독성과 유지보수성을 높이려는 시도를 지속적으로 하고 있습니다. 최신 버전의 React 문법 변화에도 빠르게 적응하며 실무에 적용하고 있습니다.",
  "reactNative": "React Native를 활용한 모바일 앱 개발 경험이 있으며, 플랫폼 특성에 따른 조건부 렌더링과 BottomSheet UI 구현에 익숙합니다. WebGL 기반의 three.js를 활용해 3D 렌더링을 모바일 앱에 적용해본 경험이 있으며, 네이티브 환경에서도 최적화된 사용자 경험을 제공하기 위해 FlatList, useCallback 등을 통해 성능 최적화에도 신경 쓰고 있습니다. 플랫폼별 스타일 처리와 StatusBar, SafeAreaView 등의 네이티브 요소도 고려한 UI 설계가 가능합니다.",
  "typescript": "TypeScript 컴파일러(tsc)의 작동 원리를 이해하고 있으며, 타입 안정성과 확장성을 고려한 interface 기반의 설계에 익숙합니다. union, tuple, enum 등의 문법을 적절히 활용해 복잡한 데이터 구조도 안정적으로 관리할 수 있으며, 실무에서는 타입 에러를 사전에 예방하고 생산성을 높이기 위해 적극적으로 도입해왔습니다.",
  "nextJS": "Next.js에 대한 지속적인 학습을 이어가고 있으며, 실제 프로젝트에서 SSR과 CSR의 차이를 이해하고 페이지 특성에 따라 적절한 렌더링 방식을 선택해 구현한 경험이 있습니다. App Router 기반의 병렬 라우팅(Parallel Routing)을 활용해 유연한 페이지 구성을 시도해보았고, GraphQL 환경에서는 Relay를 사용해 대규모 데이터를 효율적으로 처리한 경험이 있습니다. 아직 완전히 숙련된 단계는 아니지만, 실전 적용을 통해 점진적으로 역량을 넓혀가고 있습니다.",
  "zustand": "Zustand의 경량 상태 관리 구조와 hook 기반 스토어 패턴을 이해하고 있으며, 복잡한 boilerplate 없이 간단하게 전역 상태를 구성해 빠른 프로토타이핑과 컴포넌트 간 데이터 공유를 구현할 수 있습니다. TypeScript와 함께 사용하며 store 타입 안전성을 유지한 개발 경험이 있습니다.",
  "mobx": "MobX의 관찰자(Observer) 패턴 기반 상태 관리를 이해하고 있으며, @observable, @action, @computed 등의 데코레이터를 통해 반응형 UI를 구성해본 경험이 있습니다. 상태 변화에 따른 자동 렌더링 흐름을 설명할 수 있으며, 복잡한 컴포넌트 간 상태 의존성도 간결하게 표현할 수 있습니다.",
  "redux": "Redux의 예측 가능한 상태 흐름과 명확한 구조를 이해하고 있으며, state → action → reducer → store 의 데이터 플로우를 정확히 설명할 수 있습니다. Redux Toolkit을 활용한 전역 상태 관리와 미들웨어(Redux Thunk)를 통한 비동기 처리 경험이 있습니다.",
  "styledComponent": "styled-components의 Component-Based Design 관점에서의 장점을 이해하고 있으며, 컴포넌트 단위의 스타일 추상화 및 재사용 가능한 구조를 구성할 수 있습니다. Tailwind CSS와 같은 유틸리티 기반 프레임워크와 비교해 선언적이고 명확한 스타일 흐름이 필요한 상황에서 styled-components를 선택해 사용했으며, 선언 방식에 따른 가독성 이슈 또한 인지하고 있습니다. 최근 공식 유지보수 종료 이슈에 따라, 대안과 마이그레이션 방안에 대해서도 관심을 가지고 있습니다.",
  "tailwind": "Tailwind CSS를 활용한 스타일링에 익숙하며, tailwind.config.ts를 통해 커스터마이징 및 전역 설정을 구성할 수 있습니다. Tailwind가 기본적으로 Override하는 스타일 속성을 인지하고 있으며, 이를 고려해 h1, button 등의 요소를 기반으로 공용 UI 컴포넌트를 재정의하고 재사용 가능한 구조로 구성한 경험이 있습니다. 실무에서도 전역 스타일 관리와 디자인 시스템 구현에 Tailwind를 적극적으로 활용하고 있습니다.",
  "reactQuery": "React Query의 캐싱 메커니즘과 쿼리 흐름을 이해하고 있으며, queryKey를 통한 데이터 식별 및 상태 관리가 가능합니다. mutation과 fetchQuery의 차이를 구분해 상황에 맞게 사용할 수 있으며, invalidateQueries를 통해 쿼리 상태를 적절히 갱신하는 경험도 보유하고 있습니다. 로딩, 에러, 성공 상태에 따른 UI 분기를 통해 서버 상태 관리에 구조적으로 접근할 수 있습니다.",
  "git": "Git CLI를 활용해 브랜치 생성, 커밋, 병합 등의 작업을 능숙하게 수행할 수 있으며, Git과 GitHub의 차이점을 명확히 인지하고 있습니다. 커밋 히스토리 관리를 위해 squash, reword, drop 등의 리베이스 옵션을 적절히 사용해본 경험이 있으며, 복잡한 병합 충돌 상황에서도 커밋 단위로 원인을 파악하고 해결할 수 있습니다. 또한 rebase의 작동 방식과 base 커밋의 개념을 정확히 이해하고 있어 팀 내 깔끔한 히스토리 유지를 위한 Git 전략을 설계할 수 있습니다.",
  "github": "GitHub Projects를 활용해 이슈 관리와 작업 진행 상황을 시각화할 수 있으며, Fork, Sourcetree 등의 버전 관리 도구도 병행하여 사용한 경험이 있습니다. 코드 리뷰와 Pull Request 프로세스를 통해 코드 품질을 향상시키는 커뮤니케이션 방법에 익숙하며, GitHub 커뮤니티의 생태계와 협업 방식에 대한 이해를 기반으로 원활한 팀 협업을 진행할 수 있습니다.",
  "githubActions": "GitHub Actions를 통해 CI/CD 자동화 파이프라인을 구축해본 경험이 있으며, YAML 문서를 작성해 프로젝트의 빌드 및 배포를 자동화한 바 있습니다. 자동화 과정에서 발생하는 오류의 로그를 분석하고 문제를 해결한 경험이 있으며, 현재는 반복적인 워크플로우를 줄이기 위해 지속적인 학습과 개선을 이어가고 있습니다.",
  "vercel": "GitHub 리포지토리를 연동해 자동화 배포 파이프라인을 구성한 경험이 있으며, 커스텀 도메인 연결 및 Redirect 설정도 수행할 수 있습니다. Preview URL을 통해 배포 전 검수 과정을 진행해본 경험이 있고, 환경 변수 관리와 CI/CD 통합 등 실무 기능을 적극 활용해왔습니다.",
  "figma": "디자이너와의 협업을 통해 컴포넌트 기반 디자인 시스템을 이해하고 구현할 수 있으며, 반응형 웹 디자인의 구조를 분석해 UI에 반영하는 데 익숙합니다. Figma 상에서 어색한 사용자 플로우를 인지하고 개선 제안을 한 경험이 있으며, 플러그인 활용과 프로토타이핑 기능을 포함해 디자이너와의 원활한 커뮤니케이션이 가능합니다.",
  "notion": "Notion을 실무에서 적극적으로 활용해 Daily Scrum, 회의록, Git 커밋/코드리뷰 컨벤션 등을 문서화한 경험이 있습니다. 데이터베이스를 활용한 프로젝트 관리와 페이지 분할 구조 설계를 통해 팀원 간 협업을 원활하게 이끌었으며, 개인 일정 관리까지도 Notion으로 처리할 만큼 높은 숙련도를 보유하고 있습니다.",
  "jira": "Jira의 칸반 보드를 활용한 티켓 기반 QA 프로세스를 경험했으며, 클라이언트와의 이슈 관리와 피드백 반영을 빠르게 진행할 수 있었습니다. Epic, Task, Sub-task의 구분을 명확히 이해하고 있으며, 이슈 우선순위 지정과 워크플로우 커스터마이징에도 익숙합니다.",
  "slack": "Slack을 주요 커뮤니케이션 툴로 사용해 사용자 멘션, 스레드 중심 대화, 파일 공유 및 알림 관리를 능숙하게 할 수 있습니다. 실무에서는 슬랙 자동화 봇(예: Daily GeekNews 공유, CI/CD 알림 연동 등)을 활용해 반복적인 작업을 줄이고 효율적인 팀 커뮤니케이션 환경을 조성한 경험이 있습니다."
}
